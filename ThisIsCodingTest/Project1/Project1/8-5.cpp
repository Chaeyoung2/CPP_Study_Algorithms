// 8-5. 1로 만들기
// 220403 엑스~ 다시 풀어
// 220505 세모~ 다시 풀어

#include <iostream>
using namespace std;

// 정수 X가 주어졌을 때
// 
// X가 5로 나누어 떨어지면 5로 나눔
// X가 3으로 나누어 떨어지면 3으로 나눔
// X가 2로 나누어 떨어지면 2로 나눔
// X에서 1을 뺌

// 위의 연산 네 개를 적절히 사용하여 값을 1로 만들자.
// 연산 횟수의 최솟값을 구해라.

// 예를 들어, 정수가 26이면
// 26 -> 25 -> 5 -> 1
// 으로, 3번의 연산이 최솟값이다.

int x;
int dp[30001];
int main() {
	cin >> x;

	for (int i = 2; i <= x; i++) {
		dp[i] = dp[i - 1] + 1;
		if (i % 2 == 0) {
			dp[i] = min(dp[i], dp[i / 2] + 1);
		}
		if (i % 3 == 0) {
			dp[i] = min(dp[i], dp[i / 3] + 1);
		}
		if (i % 5 == 0) {
			dp[i] = min(dp[i], dp[i / 5] + 1);
		}
	}

}
